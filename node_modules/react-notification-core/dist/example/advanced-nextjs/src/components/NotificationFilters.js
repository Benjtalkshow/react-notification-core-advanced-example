"use strict";
"use client";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
function NotificationFilters({ filterByType, filterByReadStatus, resetFilters, countsByType, currentFilters, }) {
    return ((0, jsx_runtime_1.jsxs)("div", { className: "flex gap-2", children: [(0, jsx_runtime_1.jsxs)("select", { value: currentFilters.type || "", onChange: (e) => filterByType(e.target.value || undefined), className: "px-3 py-2 border rounded text-sm", children: [(0, jsx_runtime_1.jsx)("option", { value: "", children: "All Types" }), (0, jsx_runtime_1.jsxs)("option", { value: "info", children: ["Info (", countsByType["info"] || 0, ")"] }), (0, jsx_runtime_1.jsxs)("option", { value: "success", children: ["Success (", countsByType["success"] || 0, ")"] }), (0, jsx_runtime_1.jsxs)("option", { value: "warning", children: ["Warning (", countsByType["warning"] || 0, ")"] }), (0, jsx_runtime_1.jsxs)("option", { value: "error", children: ["Error (", countsByType["error"] || 0, ")"] })] }), (0, jsx_runtime_1.jsxs)("select", { value: currentFilters.read === undefined ? "" : currentFilters.read ? "read" : "unread", onChange: (e) => {
                    if (e.target.value === "read")
                        filterByReadStatus(true);
                    else if (e.target.value === "unread")
                        filterByReadStatus(false);
                    else
                        filterByReadStatus(undefined);
                }, className: "px-3 py-2 border rounded text-sm", children: [(0, jsx_runtime_1.jsx)("option", { value: "", children: "All Status" }), (0, jsx_runtime_1.jsx)("option", { value: "read", children: "Read" }), (0, jsx_runtime_1.jsx)("option", { value: "unread", children: "Unread" })] }), (0, jsx_runtime_1.jsx)("button", { onClick: resetFilters, className: "px-3 py-2 border rounded text-sm hover:bg-gray-100", children: "Reset" })] }));
}
exports.default = NotificationFilters;
//# sourceMappingURL=NotificationFilters.js.map