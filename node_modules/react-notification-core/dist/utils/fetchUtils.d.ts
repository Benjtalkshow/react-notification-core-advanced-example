import type { FetchOptions } from "../types";
/**
 * Fetches data with retry capability
 * @param fetchFn The function to fetch data
 * @param options Options for retrying
 * @returns The fetched data
 */
export declare function fetchWithRetry<T>(fetchFn: () => Promise<T>, options?: FetchOptions): Promise<T>;
/**
 * Formats a timestamp into a human-readable string
 * @param timestamp The timestamp to format
 * @returns A formatted string like "2 minutes ago"
 */
export declare function formatTimestamp(timestamp: Date | string): string;
/**
 * Groups notifications by date
 * @param notifications Array of notifications
 * @returns Object with dates as keys and arrays of notifications as values
 */
export declare function groupNotificationsByDate(notifications: any[]): Record<string, any[]>;
/**
 * Filters notifications based on criteria
 * @param notifications Array of notifications
 * @param criteria Filter criteria
 * @returns Filtered array of notifications
 */
export declare function filterNotifications(notifications: any[], criteria: {
    read?: boolean;
    type?: string;
    search?: string;
    fromDate?: Date;
    toDate?: Date;
}): any[];
//# sourceMappingURL=fetchUtils.d.ts.map